sourceSets {
    integTest {
        java {
            compileClasspath += main.output + test.output + project.configurations.annotationProcessor
            runtimeClasspath += main.output + test.output
            srcDir file('src/integTest/java')
        }
        resources.srcDir file('src/integTest/resources')
    }
}

configurations {
    integTestImplementation.extendsFrom testImplementation
    integTestRuntimeOnly.extendsFrom testRuntimeOnly
}

idea.module {
    scopes.TEST.plus += [configurations.integTestRuntimeClasspath, configurations.integTestCompileClasspath]

    testSourceDirs += file('src/integTest/java')
    testSourceDirs += file('src/integTest/resources')

    iml.withXml {
        def content = it.asNode().component.find { it.'@name' == 'NewModuleRootManager' }.content[0]
        content.sourceFolder.each { sourceFolder ->
            if (sourceFolder.@url?.endsWith('/resources')) {
                sourceFolder.attributes().with {
                    boolean isTestSource = (remove('isTestSource') == 'true')
                    put('type', isTestSource ? 'java-test-resource' : 'java-resource')
                }
            }
        }
    }
}

task integTest(type: Test) {
    group 'Verification'
    description 'Runs the integration tests.'

    dependencies {
        testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
    }

    testClassesDirs = sourceSets.integTest.output.classesDirs
    classpath = sourceSets.integTest.runtimeClasspath

    check.dependsOn integTest
}
